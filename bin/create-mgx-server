#!/usr/bin/env bash

#
# $Id$
#

if [ $# -ne 2 ]; then
    echo ""
    echo "Usage $0 <GPMS-type> <domain-name>"
    echo ""
    exit 1
fi

GPMSTYPE=$1
DOMAIN=$2

command -v xsltproc >/dev/null 2>&1 || { echo >&2 "xsltproc not found."; exit 1; }
command -v asadmin >/dev/null 2>&1 || { echo >&2 "asadmin not found."; exit 1; }


# find the glassfish installation dir
#
GF_ROOT=`dirname ${ASADMIN} | sed -e 's/bin$//'`
GF_DOMAINROOT=""

if [ -d ${GF_ROOT}glassfish/domains ]; then
    GF_DOMAINROOT=${GF_ROOT}glassfish/domains
elif [ -d ${GF_ROOT}domains ]; then
    GF_DOMAINROOT=${GF_ROOT}domains
else 
    echo "Could not determine Glassfish domain directory."
    exit 1
fi


${ASADMIN} create-domain ${DOMAIN} || exit 1

CFG_DIR=${GF_DOMAINROOT}/${DOMAIN}/config

# create backup copies of unmodified domain configuration
mv ${CFG_DIR}/login.conf ${CFG_DIR}/login.conf.dist || exit 1
mv ${CFG_DIR}/domain.xml ${CFG_DIR}/domain.xml.dist || exit 1

#
# basic setup of MGX datasources
#
XSLT="`dirname $0`/../share/MGX_base.xsl"
xsltproc ${XSLT} ${CFG_DIR}/domain.xml.dist > ${CFG_DIR}/domain.xml

# 
# configure GPMS authentication backend
#
if [ ${GPMSTYPE} = "MySQL" ]; then

    ( echo "GPMSRealm {"
      echo "        de.cebitec.gpms.appserv.GPMSGlassfishLoginModule required;"
      echo "};"
      echo ""
    ) > ${CFG_DIR}/login.conf
    cat ${CFG_DIR}/login.conf.dist >> ${CFG_DIR}/login.conf

    XSLT_GPMS="`dirname $0`/../share/MGX_mysqlgpms.xsl"
    xsltproc ${XSLT_GPMS} ${CFG_DIR}/domain.xml > ${CFG_DIR}/domain.xml.gpms
    mv ${CFG_DIR}/domain.xml.gpms ${CFG_DIR}/domain.xml

elif [ ${GPMSTYPE} = "LDAP" ]; then

    ( echo "GPMSRealm {"
      echo "        com.sun.enterprise.security.auth.login.LDAPLoginModule required;"
      echo "};"
      echo ""
    ) > ${CFG_DIR}/login.conf
    cat ${CFG_DIR}/login.conf.dist >> ${CFG_DIR}/login.conf

    XSLT_GPMS="`dirname $0`/../share/MGX_ldapgpms.xsl"
    xsltproc ${XSLT_GPMS} ${CFG_DIR}/domain.xml > ${CFG_DIR}/domain.xml.gpms
    mv ${CFG_DIR}/domain.xml.gpms ${CFG_DIR}/domain.xml

else
    echo "Invalid GPMS implementation type. Cannot auto-setup configuration."
fi

#
# format domain configuration
#
xmllint --format ${CFG_DIR}/domain.xml > /tmp/$$
mv /tmp/$$ ${CFG_DIR}/domain.xml

cp `dirname $0`/../share/mgx_server.properties ${CFG_DIR}/
cp `dirname $0`/../share/gpms.properties ${CFG_DIR}/

#
# due to different classloaders, several dependencies cannot be
# deployed and have to be direclty installed into lib/ext/
#

# fetch the Mysql JAR
wget --user-agent="Mozilla" \
  -O ${GF_DOMAINROOT}/${DOMAIN}/lib/ext/mysql-connector-java-8.0.16.jar \
  http://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar

# psql driver
wget -O ${GF_DOMAINROOT}/${DOMAIN}/lib/ext/postgresql-42.2.5.jar \
  https://jdbc.postgresql.org/download/postgresql-42.2.5.jar

# fetch JavaGPMS realm
wget \
  -O ${GF_DOMAINROOT}/${DOMAIN}/autodeploy/bundles/GPMS-glassfish3-realm-1.1.jar \
  https://artifactory.computational.bio.uni-giessen.de/artifactory/libs-release-local/de/cebitec/gpms/GPMS-glassfish3-realm/1.1/GPMS-glassfish3-realm-1.1.jar

# need running instance for this to work
${ASADMIN} start-domain ${DOMAIN} || exit 1
${ASADMIN} enable-secure-admin || exit 1
${ASADMIN} stop-domain ${DOMAIN} || exit 1

